<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>算法 on Patrick's Blog</title><link>/tags/%E7%AE%97%E6%B3%95/</link><description>Recent content in 算法 on Patrick's Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Wed, 31 May 2023 21:26:21 +0800</lastBuildDate><atom:link href="/tags/%E7%AE%97%E6%B3%95/rss.xml" rel="self" type="application/rss+xml"/><item><title>力扣-准时到达的列车最小时速</title><link>/post/ledtcode-1870/</link><pubDate>Wed, 31 May 2023 21:26:21 +0800</pubDate><guid>/post/ledtcode-1870/</guid><description>&lt;h2 id="描述">描述
&lt;a class="header-anchor" href="#%e6%8f%8f%e8%bf%b0">&lt;/a>
&lt;/h2>&lt;p>
&lt;a href="https://leetcode.cn/problems/minimum-speed-to-arrive-on-time/" title="力扣1870" rel="noopener external nofollow noreferrer" target="_blank" class=" exturl">
 力扣1870
 
 &lt;i class="fa fa-external-link-alt">&lt;/i>
 
&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>给你一个浮点数 hour ，表示你到达办公室可用的总通勤时间。要到达办公室，你必须按给定次序乘坐 n 趟列车。另给你一个长度为 n 的整数数组 dist ，其中 dist[i] 表示第 i 趟列车的行驶距离（单位是千米）。每趟列车均只能在整点发车，所以你可能需要在两趟列车之间等待一段时间。例如，第 1 趟列车需要 1.5 小时，那你必须再等待 0.5 小时，搭乘在第 2 小时发车的第 2 趟列车。
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 返回能满足你准时到达办公室所要求全部列车的 最小正整数 时速（单位：千米每小时），如果无法准时到达，则返回 -1 。
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 生成的测试用例保证答案不超过 10^7 ，且 hour 的小数点后最多存在两位数字 。
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>牛客-合唱队解法</title><link>/post/niu-ke---he-chang-dui-jie-fa/</link><pubDate>Mon, 22 May 2023 20:23:21 +0800</pubDate><guid>/post/niu-ke---he-chang-dui-jie-fa/</guid><description>&lt;h2 id="描述">描述
&lt;a class="header-anchor" href="#%e6%8f%8f%e8%bf%b0">&lt;/a>
&lt;/h2>&lt;p>牛客网题目: 
&lt;a href="https://www.nowcoder.com/practice/6d9d69e3898f45169a441632b325c7b4" title="合唱队" rel="noopener external nofollow noreferrer" target="_blank" class=" exturl">
 合唱队
 
 &lt;i class="fa fa-external-link-alt">&lt;/i>
 
&lt;/a>
N 位同学站成一排，音乐老师要请最少的同学出列，使得剩下的 K 位同学排成合唱队形。
通俗来说，能找到一个同学，他的两边的同学身高都依次严格降低的队形就是合唱队形。&lt;/p></description></item><item><title>牛客-四则运算解法</title><link>/post/niu-ke---si-ze-yun-suan-jie-fa/</link><pubDate>Sun, 21 May 2023 19:28:21 +0800</pubDate><guid>/post/niu-ke---si-ze-yun-suan-jie-fa/</guid><description>&lt;h2 id="描述">描述
&lt;a class="header-anchor" href="#%e6%8f%8f%e8%bf%b0">&lt;/a>
&lt;/h2>&lt;p>牛客网题目: 
&lt;a href="https://www.nowcoder.com/practice/9999764a61484d819056f807d2a91f1e" title="四则运算" rel="noopener external nofollow noreferrer" target="_blank" class=" exturl">
 四则运算
 
 &lt;i class="fa fa-external-link-alt">&lt;/i>
 
&lt;/a>
输入一个表达式（用字符串表示）, 求这个表达式的值.
保证字符串中的有效字符包括[‘0’-‘9’],‘+’,‘-’, ‘*’,‘/’ ,‘(’， ‘)’,‘[’, ‘]’,‘{’ ,‘}’. 且表达式一定合法.&lt;/p>
&lt;p>数据范围：表达式计算结果和过程中满足∣val∣≤1000 ，字符串长度满足 1≤n≤1000&lt;/p></description></item></channel></rss>