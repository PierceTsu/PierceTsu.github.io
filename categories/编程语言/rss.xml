<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>编程语言 on Patrick's Blog</title><link>/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/</link><description>Recent content in 编程语言 on Patrick's Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Wed, 05 Oct 2016 17:40:03 +0800</lastBuildDate><atom:link href="/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/rss.xml" rel="self" type="application/rss+xml"/><item><title>Pyhton中的时间模块</title><link>/post/datetime-module-of-python/</link><pubDate>Wed, 05 Oct 2016 17:40:03 +0800</pubDate><guid>/post/datetime-module-of-python/</guid><description>&lt;h2 id="获取当前日期和时间">获取当前日期和时间
&lt;a class="header-anchor" href="#%e8%8e%b7%e5%8f%96%e5%bd%93%e5%89%8d%e6%97%a5%e6%9c%9f%e5%92%8c%e6%97%b6%e9%97%b4">&lt;/a>
&lt;/h2>&lt;h3 id="使用time模块">使用time模块
&lt;a class="header-anchor" href="#%e4%bd%bf%e7%94%a8time%e6%a8%a1%e5%9d%97">&lt;/a>
&lt;/h3>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> time
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(time&lt;span style="color:#f92672">.&lt;/span>strftime(&lt;span style="color:#e6db74">&amp;#39;%Y-%m-&lt;/span>&lt;span style="color:#e6db74">%d&lt;/span>&lt;span style="color:#e6db74"> %H:%M:%S&amp;#39;&lt;/span>, time&lt;span style="color:#f92672">.&lt;/span>localtime(time&lt;span style="color:#f92672">.&lt;/span>time())))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Out: 2016-12-08 17:14:29&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="使用datetime模块">使用datetime模块
&lt;a class="header-anchor" href="#%e4%bd%bf%e7%94%a8datetime%e6%a8%a1%e5%9d%97">&lt;/a>
&lt;/h3>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> datetime &lt;span style="color:#f92672">import&lt;/span> datetime
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> datetime &lt;span style="color:#f92672">import&lt;/span> date
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>today &lt;span style="color:#f92672">=&lt;/span> date&lt;span style="color:#f92672">.&lt;/span>today()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(str(today&lt;span style="color:#f92672">.&lt;/span>year) &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#39;-&amp;#39;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> str(today&lt;span style="color:#f92672">.&lt;/span>month) &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#39;-&amp;#39;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> str(today&lt;span style="color:#f92672">.&lt;/span>day)) 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Out: 2016-12-8&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(today&lt;span style="color:#f92672">.&lt;/span>strftime(&lt;span style="color:#e6db74">&amp;#39;%Y-%m-&lt;/span>&lt;span style="color:#e6db74">%d&lt;/span>&lt;span style="color:#e6db74">&amp;#39;&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Out: 2016-12-08&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>now &lt;span style="color:#f92672">=&lt;/span> datetime&lt;span style="color:#f92672">.&lt;/span>now()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(now&lt;span style="color:#f92672">.&lt;/span>strftime(&lt;span style="color:#e6db74">&amp;#39;%Y-%m-&lt;/span>&lt;span style="color:#e6db74">%d&lt;/span>&lt;span style="color:#e6db74"> %H:%M:%S&amp;#39;&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Out: 2016-12-08 17:14:29&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Java基础之网络编程</title><link>/post/network-of-java/</link><pubDate>Sun, 19 Jul 2015 17:49:26 +0800</pubDate><guid>/post/network-of-java/</guid><description>&lt;h2 id="网络编程概述">网络编程概述
&lt;a class="header-anchor" href="#%e7%bd%91%e7%bb%9c%e7%bc%96%e7%a8%8b%e6%a6%82%e8%bf%b0">&lt;/a>
&lt;/h2>&lt;p>网络编程的本质是两个设备之间的数据交换（把一个设备中的数据发送给两外一个设备，然后接受另外一个设备反馈的数据）。&lt;/p>
&lt;h3 id="网络模型">网络模型
&lt;a class="header-anchor" href="#%e7%bd%91%e7%bb%9c%e6%a8%a1%e5%9e%8b">&lt;/a>
&lt;/h3>&lt;ul>
&lt;li>OSI参考模型&lt;/li>
&lt;li>TCP/IP 参考模型&lt;/li>
&lt;/ul></description></item><item><title>Io of Javase Part2</title><link>/post/io-of-javase-part2/</link><pubDate>Sun, 07 Jun 2015 17:39:07 +0800</pubDate><guid>/post/io-of-javase-part2/</guid><description>&lt;h2 id="io包中的其他类">IO包中的其他类
&lt;a class="header-anchor" href="#io%e5%8c%85%e4%b8%ad%e7%9a%84%e5%85%b6%e4%bb%96%e7%b1%bb">&lt;/a>
&lt;/h2>&lt;h3 id="打印流">打印流
&lt;a class="header-anchor" href="#%e6%89%93%e5%8d%b0%e6%b5%81">&lt;/a>
&lt;/h3>&lt;ul>
&lt;li>PrintWriter与PrintStream：可以直接操作输入流和文件，都属于输出流，分别针对字符和字节。&lt;/li>
&lt;li>调用 println 方法有自动 flush 功能&lt;/li>
&lt;li>PrintWriter 和 PrintStream 重载的 print()和 println()用于多种数据类型的输出。&lt;/li>
&lt;li>print()里的参数不能为空；println()可以&lt;/li>
&lt;/ul></description></item><item><title>Java基础之IO操作（上）</title><link>/post/io-of-javase-part1/</link><pubDate>Sat, 06 Jun 2015 17:39:02 +0800</pubDate><guid>/post/io-of-javase-part1/</guid><description>&lt;h2 id="io流">IO流
&lt;a class="header-anchor" href="#io%e6%b5%81">&lt;/a>
&lt;/h2>&lt;h3 id="概述">概述：
&lt;a class="header-anchor" href="#%e6%a6%82%e8%bf%b0">&lt;/a>
&lt;/h3>&lt;ul>
&lt;li>用来处理设备之间的数据传输。Java对数据的操作是通过流的方式。Java用于操作流的对象都在IO包中。&lt;/li>
&lt;/ul>
&lt;h3 id="分类按操作数据">分类(按操作数据)：
&lt;a class="header-anchor" href="#%e5%88%86%e7%b1%bb%e6%8c%89%e6%93%8d%e4%bd%9c%e6%95%b0%e6%8d%ae">&lt;/a>
&lt;/h3>&lt;ul>
&lt;li>字符流的抽象基类：
&lt;ul>
&lt;li>Reader
&lt;ul>
&lt;li>BuffedReader(字符读取流缓冲区)&lt;/li>
&lt;li>InputStreamReader（转换流）
&lt;ul>
&lt;li>FileReader&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Writer
&lt;ul>
&lt;li>PrintWrite&lt;/li>
&lt;li>BuffedWriter(字符输出流缓冲区)&lt;/li>
&lt;li>OutputStreamWriter（转换流）
&lt;ul>
&lt;li>FileWriter&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul></description></item><item><title>java基础之集合（上）</title><link>/post/collection-of-java-part1/</link><pubDate>Sun, 10 May 2015 17:28:48 +0800</pubDate><guid>/post/collection-of-java-part1/</guid><description>&lt;h2 id="集合类">集合类
&lt;a class="header-anchor" href="#%e9%9b%86%e5%90%88%e7%b1%bb">&lt;/a>
&lt;/h2>&lt;ul>
&lt;li>面向对象语言对事物的体现都是以对象的形式，所以为了方便对多个对象的操作，就要对对象进行存储，集合就是存储对象最常用的一种方式。&lt;/li>
&lt;li>集合特点：
&lt;ul>
&lt;li>用于存储对象的容器。&lt;/li>
&lt;li>集合的长度是可变的。&lt;/li>
&lt;li>集合中不可以存储基本数据类型值。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>集合容器因为内部的数据结构不同，有多种具体容器。不断的向上抽取，就形成了集合框架。&lt;/li>
&lt;/ul></description></item><item><title>Java基础之多线程</title><link>/post/multi-thread-of-java/</link><pubDate>Sun, 19 Apr 2015 17:23:26 +0800</pubDate><guid>/post/multi-thread-of-java/</guid><description>&lt;h2 id="进程线程和多线程">进程、线程和多线程
&lt;a class="header-anchor" href="#%e8%bf%9b%e7%a8%8b%e7%ba%bf%e7%a8%8b%e5%92%8c%e5%a4%9a%e7%ba%bf%e7%a8%8b">&lt;/a>
&lt;/h2>&lt;ul>
&lt;li>进程：正在进行中的程序（直译）。&lt;/li>
&lt;li>线程：进程中一个负责程序执行的控制单元（执行路径）。&lt;/li>
&lt;li>多线程：一个进程中可以有多个执行路径，称之为多线程。
&lt;ul>
&lt;li>好处：解决了多部分代码同时运行的问题。&lt;/li>
&lt;li>弊端：线程太多，会导致效率的降低。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul></description></item><item><title>Java基础之常用类</title><link>/post/the-common-class-of-java/</link><pubDate>Sun, 05 Apr 2015 13:57:58 +0800</pubDate><guid>/post/the-common-class-of-java/</guid><description>&lt;h2 id="object类">Object类
&lt;a class="header-anchor" href="#object%e7%b1%bb">&lt;/a>
&lt;/h2>&lt;ul>
&lt;li>类 Object 是类层次结构的根类。每个类都使用 Object 作为&lt;strong>超类&lt;/strong>。所有对象（包括数组）都实现这个类的方法。&lt;/li>
&lt;/ul></description></item></channel></rss>